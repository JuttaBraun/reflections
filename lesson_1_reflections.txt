How did viewing a diff between two versions of a file help you see the bug that was introduced?
- All differences are shown. First the "older" (first file) than the "newer" (second file) versio-n.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
- Using tools which use a version control.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
- Commits can be to short -> Histery overflow
- commits can be to big   -> confusing changes
- Commits will be done when necessary

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
- Because one logical change can cause changes in diffent files.

How can you use the commands git log and git diff to view the history of files?
- The git log command shows the history with author date and ID.
- With die git diff command you can see the differences of two version, by entering the IDs

How might using version control make you more confident to make changes that could break something?
- It something breakes, I can go back to the last working version.

Now that you have your workspace set up, what do you want to try using Git for?
- I what to use it for commig courses and projects